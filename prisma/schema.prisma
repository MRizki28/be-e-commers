// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique @db.VarChar(255)
  password     String   @db.VarChar(255)
  role         Role     @default(USER)
  token_access String?
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  profile      Profile? @relation("UserProfile")
  carts        Cart[]   @relation("UserCart")
  orders       Order[]  @relation("UserOrder")
}

model Profile {
  id           String   @id @default(uuid())
  id_user      String   @unique
  user         User     @relation("UserProfile", fields: [id_user], references: [id])
  name         String   @db.VarChar(255)
  address      String
  phone_number String   @db.VarChar(255)
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
}

model Product {
  id           String   @id @default(uuid())
  name_product String   @db.VarChar(255)
  stock        Int
  price        Decimal  @db.Decimal(10, 2)
  product_img  String   @db.VarChar(255)
  description  String
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  carts        Cart[]   @relation("ProductCart")
}

model Cart {
  id         String   @id @default(uuid())
  id_user    String
  user       User     @relation("UserCart", fields: [id_user], references: [id])
  id_product String
  product    Product  @relation("ProductCart", fields: [id_product], references: [id])
  qty        Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Order {
  id            String   @id @default(uuid())
  id_user       String
  user          User     @relation("UserOrder", fields: [id_user], references: [id])
  total_amount  Decimal  @db.Decimal(10, 2)
  product_order Json[]
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
}
